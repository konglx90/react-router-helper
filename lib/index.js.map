{"version":3,"sources":["../src/index.js"],"names":["defaultBeforeRouteMiddlewares","defaultAfterRouteMiddlewares","routeChange","history","push","to","routerMiddlewareHandler","createPath","enhance","Error","before","after","locationSearch","window","location","search","url","beforeTasks","Array","isArray","afterTasks","tasks","goOnFlag","next","goOn","reduce","acc","cur"],"mappings":";;;;;;;AAAA;;;;;;;;AAEA,IAAMA,gCAAgC,EAAtC;;AAEA,IAAMC,+BAA+B,EAArC;;AAEO,IAAMC,oCAAc,SAAdA,WAAc;AAAA,WAAMC,kBAAQC,IAAR,CAAaC,EAAb,CAAN;AAAA,CAApB;;AAEP,IAAMC,0BAA0B,SAA1BA,uBAA0B,CAACC,UAAD,EAAaC,OAAb;AAAA,WAAyB,YAAY;AACjE,YAAI,CAACL,kBAAQC,IAAb,EAAmB,MAAM,IAAIK,KAAJ,CAAU,2BAAV,CAAN;;AAD8C,mBAK7DD,WAAW,EALkD;AAAA,+BAG7DE,MAH6D;AAAA,YAG7DA,MAH6D,+BAGpD,EAHoD;AAAA,8BAI7DC,KAJ6D;AAAA,YAI7DA,KAJ6D,8BAIrD,EAJqD;;AAMjE,YAAMC,iBAAiBC,OAAOC,QAAP,CAAgBC,MAAvC;AACA,YAAMC,WAAST,sCAAT,GAA8BK,cAApC;AACA,YAAMK,cAAcC,MAAMC,OAAN,CAAcT,MAAd,IACdA,MADc,GAEd,CAACA,MAAD,CAFN;AAGA,YAAMU,aAAaF,MAAMC,OAAN,CAAcR,KAAd,IACbA,KADa,GAEb,CAACA,KAAD,CAFN;AAGA,YAAMU,kBACCrB,6BADD,qBAECiB,WAFD,IAGFf,WAHE,sBAICkB,UAJD,GAKCnB,4BALD,CAAN;AAOA,YAAIqB,WAAW,IAAf;AACA,YAAMC,OAAO,SAAPA,IAAO,CAACC,IAAD,EAAU;AACnB,gBAAIA,SAAS,KAAb,EAAoB;AAChBF,2BAAWE,IAAX;AACH,aAFD,MAEO;AACHF,2BAAW,IAAX;AACH;AACJ,SAND;AAOAD,cAAMI,MAAN,CAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvB,gBAAID,GAAJ,EAAS;AACLC,oBAAIX,GAAJ,EAASO,IAAT;AACH;AACD,mBAAOD,QAAP;AACH,SALD,EAKGA,QALH;AAMH,KAnC+B;AAAA,CAAhC;;QAqCSnB,O,GAAAA,iB;kBACMG,uB","file":"index.js","sourcesContent":["import history from './history';\n\nconst defaultBeforeRouteMiddlewares = [];\n\nconst defaultAfterRouteMiddlewares = [];\n\nexport const routeChange = to => history.push(to);\n\nconst routerMiddlewareHandler = (createPath, enhance) => (...arg) => {\n    if (!history.push) throw new Error('need react router history');\n    const {\n        before = [],\n        after = [],\n    } = enhance || {};\n    const locationSearch = window.location.search;\n    const url = `${createPath(...arg)}${locationSearch}`;\n    const beforeTasks = Array.isArray(before)\n        ? before\n        : [before];\n    const afterTasks = Array.isArray(after)\n        ? after\n        : [after];\n    const tasks = [\n        ...defaultBeforeRouteMiddlewares,\n        ...beforeTasks,\n        routeChange,\n        ...afterTasks,\n        ...defaultAfterRouteMiddlewares,\n    ];\n    let goOnFlag = true;\n    const next = (goOn) => {\n        if (goOn === false) {\n            goOnFlag = goOn;\n        } else {\n            goOnFlag = true;\n        }\n    };\n    tasks.reduce((acc, cur) => {\n        if (acc) {\n            cur(url, next);\n        }\n        return goOnFlag;\n    }, goOnFlag);\n};\n\nexport { history };\nexport default routerMiddlewareHandler;\n"]}